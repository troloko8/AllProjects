/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -0.125rem;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

html,
body {
  height: 100%; }

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

ul,
li {
  list-style-type: none; }

ul {
  margin: 0;
  padding: 0; }

button {
  border: none;
  background: transparent;
  cursor: pointer; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-weight: normal; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

p {
  padding: 0;
  margin: 0; }

a {
  text-decoration: none; }

input, textarea {
  border: 0; }

@font-face {
  font-family: ProximaNova-Regular;
  src: url("../fonts/ProximaNova-Regular.woff") format("woff"), url("../fonts/ProximaNova-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: fallback; }

@font-face {
  font-family: ProximaNova-Bold;
  src: url("../fonts/ProximaNova-Bold.woff") format("woff"), url("../fonts/ProximaNova-Bold.woff2") format("woff2");
  font-weight: bold;
  font-style: normal;
  font-display: fallback; }

@font-face {
  font-family: ProximaNova-LightIt;
  src: url("../fonts/ProximaNova-LightIt.woff") format("woff"), url("../fonts/ProximaNova-LightIt.woff2") format("woff2");
  font-weight: normal;
  font-style: italic;
  font-display: fallback; }

.arrow::after {
  content: '';
  border: 0.3125rem solid transparent;
  border-top-color: red;
  margin-left: 0.3125rem; }

.button {
  font-family: ProximaNova-Bold;
  font-weight: bold;
  font-style: normal;
  font-size: 0.9375rem;
  line-height: 2;
  color: #576b87;
  text-transform: uppercase;
  padding: 0.3125rem 1.6875rem;
  border-radius: 0.3125rem;
  letter-spacing: 0.1875rem; }
  @media screen and (max-width: 768px) {
    .button {
      font-size: 1.0625rem;
      padding: 0.5rem 2rem; } }
  @media screen and (max-width: 480px) {
    .button {
      font-size: 1.1875rem;
      padding: 0.625rem 2.1875rem; } }
  .button_cencel {
    border: 0.125rem solid #576b87;
    margin-right: 0.9375rem; }
    .button_cencel:hover {
      color: #ffffff;
      background: #4c6b89; }
    .button_cencel:active {
      background: #243244; }
  .button_add {
    background-color: #faed4c;
    color: #243244;
    border: 0.125rem solid #faed4c; }
    .button_add:hover {
      color: #ffffff;
      opacity: .7; }
    .button_add:active {
      opacity: .7;
      background: #c1c1be; }

.form {
  background-color: #ffffff;
  width: 100%; }
  .form__block {
    padding: 1.875rem;
    max-width: 50.4375rem;
    width: 100%; }
  .form__title {
    font-family: ProximaNova-Regular;
    font-weight: 600;
    font-style: normal;
    font-size: 1.25rem;
    line-height: 1.3;
    color: black;
    margin-bottom: 0.8125rem; }
    @media screen and (max-width: 768px) {
      .form__title {
        font-size: 1.375rem; } }
    @media screen and (max-width: 480px) {
      .form__title {
        font-size: 1.5rem; } }
  .form__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin-bottom: 2.5rem; }
    @media screen and (max-width: 400px) {
      .form__container {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column; } }
  .form__box {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;
    margin-right: 4.375rem; }
    .form__box:last-child {
      margin: 0; }
  .form__label {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    border-bottom: 1px solid #dbdcdd;
    opacity: .5; }
    .form__label:first-child {
      margin-bottom: 1.375rem; }
    .form__label:hover {
      opacity: 1; }
  .form__text {
    font-family: ProximaNova-Regular;
    font-weight: normal;
    font-style: normal;
    font-size: 0.875rem;
    line-height: 1.7;
    color: black; }
    .form__text:after {
      content: '*';
      color: red;
      margin-left: 0.1875rem; }
    @media screen and (max-width: 768px) {
      .form__text {
        font-size: 1rem; } }
    @media screen and (max-width: 480px) {
      .form__text {
        font-size: 1.125rem; } }
  .form__input {
    outline: none;
    font-family: ProximaNova-Regular;
    font-weight: normal;
    font-style: normal;
    font-size: 0.875rem;
    line-height: 1.9;
    color: black; }
    @media screen and (max-width: 768px) {
      .form__input {
        font-size: 1rem; } }
    @media screen and (max-width: 480px) {
      .form__input {
        font-size: 1.125rem; } }
  @media screen and (max-width: 480px) {
    .form__buttons {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between; } }

@media screen and (max-width: 768px) {
  html {
    font-size: 0.875rem; } }

@media screen and (max-width: 480px) {
  html {
    font-size: 0.75rem; } }

.wrapper {
  min-width: 100%;
  min-height: 100%;
  background-color: #f7f7f7;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden; }

.container {
  width: 100%;
  max-width: 61.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column; }
  @media screen and (max-width: 768px) {
    .container {
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }

.project {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  margin-top: 3.3125rem; }
  .project__title {
    font-family: ProximaNova-Bold;
    font-weight: bold;
    font-style: normal;
    font-size: 1.875rem;
    line-height: 1;
    color: black;
    margin-bottom: 2.625rem; }
  .project__table {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    margin-bottom: 3.4375rem; }
  .project__row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    background-color: #ffffff;
    margin-bottom: 0.3125rem;
    padding: 0 0.8125rem;
    min-height: 2.8125rem; }
    .project__row:last-child {
      margin: 0; }
  .project__data {
    margin-right: 10rem;
    min-width: 13%;
    text-align: left;
    font-family: ProximaNova-Regular;
    font-weight: 500;
    font-style: normal;
    font-size: 0.875rem;
    line-height: 1.9;
    color: black;
    opacity: .5;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
    @media screen and (max-width: 768px) {
      .project__data {
        min-width: 25%;
        margin-right: 13%;
        font-size: 1rem; } }
    @media screen and (max-width: 480px) {
      .project__data {
        min-width: 35%;
        margin-right: 3%;
        font-size: 1rem; } }
    .project__data:first-child {
      margin: 0;
      min-width: initial; }
      @media screen and (max-width: 768px) {
        .project__data:first-child {
          min-width: initial; } }
    .project__data:nth-child(2) {
      text-transform: uppercase; }
  .project__input {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .project__hidden {
    width: 1.25rem;
    height: 1.25rem;
    border: 1px solid #bbbdbf;
    -webkit-transition: .3s;
    transition: .3s;
    margin-right: 1.9375rem; }
    @media screen and (max-width: 480px) {
      .project__hidden {
        margin-right: 0.625rem; } }
    .project__hidden:hover {
      background: #c1c1be; }
  .project__checkbox {
    display: none; }
    .project__checkbox:checked + .project__hidden {
      background: url("../img/tick.png") center center no-repeat, #ff0000; }

.active .project__data {
  opacity: 1; }

th.project__data {
  text-transform: uppercase;
  opacity: 1; }

.label {
  font-family: ProximaNova-Regular;
  font-weight: normal;
  font-style: normal;
  font-size: 0.875rem;
  line-height: 1.9;
  color: black; }
  .label:after {
    content: '*';
    color: red;
    margin-left: 0.1875rem; }
  @media screen and (max-width: 768px) {
    .label {
      font-size: 1rem; } }
  @media screen and (max-width: 480px) {
    .label {
      font-size: 1.125rem; } }

.form__label p {
  position: relative; }

.dropcontainer {
  position: absolute;
  width: 100%; }

.trigger {
  font-family: ProximaNova-Regular;
  font-weight: normal;
  font-style: normal;
  font-size: 0.875rem;
  line-height: 1;
  color: black;
  padding: 0.1875rem 0;
  background: #fff url("../img/arrow.png") 98% center no-repeat;
  display: block;
  border-bottom: 1px solid #dbdcdd;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease; }
  @media screen and (max-width: 768px) {
    .trigger {
      font-size: 1rem; } }
  @media screen and (max-width: 480px) {
    .trigger {
      font-size: 1.125rem; } }

.activetrigger {
  font-family: ProximaNova-Regular;
  font-weight: normal;
  font-style: normal;
  font-size: 0.875rem;
  line-height: 1;
  color: black;
  padding: 0.1875rem 0;
  background: url("../img/arrow.png") 98% center no-repeat;
  display: block; }
  @media screen and (max-width: 768px) {
    .activetrigger {
      font-size: 1rem; } }
  @media screen and (max-width: 480px) {
    .activetrigger {
      font-size: 1.125rem; } }

.dropcontainer ul {
  font-family: ProximaNova-Regular;
  font-weight: normal;
  font-style: normal;
  font-size: 0.875rem;
  line-height: 1.9;
  color: black;
  list-style-type: none;
  padding: 0 1.1875rem;
  margin: 0;
  z-index: 100; }

.dropcontainer ul li {
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
  opacity: .5; }
  .dropcontainer ul li a {
    font-family: ProximaNova-LightIt;
    font-weight: normal;
    font-style: italic;
    font-size: 0.875rem;
    line-height: 2.2;
    color: black; }
    @media screen and (max-width: 768px) {
      .dropcontainer ul li a {
        font-size: 1rem; } }
    @media screen and (max-width: 480px) {
      .dropcontainer ul li a {
        font-size: 1.125rem; } }

.dropcontainer ul li:hover {
  outline: none;
  opacity: 1; }

.dropcontainer ul li:first-child {
  display: none; }

.dropcontainer ul li:last-child {
  border-bottom: none; }

.dropdownhidden {
  display: none; }

.dropdownvisible {
  height: auto;
  background: #ffffff; }

.project__data p {
  width: 5.625rem; }

.select {
  border: none;
  border-bottom: 1px solid #dbdcdd;
  padding: 0.3125rem 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-family: ProximaNova-Regular;
  font-weight: normal;
  font-style: normal;
  font-size: 0.875rem;
  line-height: 1.9;
  color: black;
  background: url("../img/arrow.png") center 40% no-repeat;
  background-size: 0.5625rem 0.3125rem;
  outline: none; }
  .select_project {
    width: 5.625rem; }
    @media screen and (max-width: 768px) {
      .select_project {
        font-size: 1rem; } }
    @media screen and (max-width: 480px) {
      .select_project {
        font-size: 1.125rem; } }

.type {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 3.4375rem; }
  @media screen and (max-width: 768px) {
    .type {
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      width: 80%;
      margin-right: -1.875rem; } }
  @media screen and (max-width: 480px) {
    .type {
      width: 100%; } }
  .type__box {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 10.75rem;
    padding: 1.25rem;
    background: #ffffff;
    margin-right: 1.875rem; }
    @media screen and (max-width: 768px) {
      .type__box {
        width: calc(50% - 30px);
        margin: 0 1.875rem 1.875rem 0; } }
    @media screen and (max-width: 400px) {
      .type__box {
        width: calc(60% - 30px);
        margin: 0 1.875rem 1.875rem 0;
        border-radius: 4.375rem; } }
    .type__box:last-child {
      margin: 0; }
      @media screen and (max-width: 768px) {
        .type__box:last-child {
          margin: 0 1.875rem 1.875rem 0; } }
      @media screen and (max-width: 480px) {
        .type__box:last-child {
          margin: 0 1.875rem 0 0; } }
  .type__picture {
    height: 3.125rem;
    margin-bottom: 0.9375rem;
    background-position: center center;
    background-repeat: no-repeat;
    background-size: contain; }
    @media screen and (max-width: 480px) {
      .type__picture {
        height: 4.375rem; } }
  .type__info {
    text-align: center; }
  .type__title {
    font-family: ProximaNova-Regular;
    font-weight: 400;
    font-style: normal;
    font-size: 1.125rem;
    line-height: 1.5;
    color: black;
    margin-bottom: 0.25rem; }
    @media screen and (max-width: 768px) {
      .type__title {
        font-size: 1.25rem; } }
    @media screen and (max-width: 480px) {
      .type__title {
        font-size: 1.375rem; } }
  .type__text {
    font-family: ProximaNova-LightIt;
    font-weight: 600;
    font-style: italic;
    font-size: 0.875rem;
    line-height: 1.3;
    color: rgba(0, 0, 0, 0.5); }
    @media screen and (max-width: 768px) {
      .type__text {
        font-size: 1rem; } }
    @media screen and (max-width: 480px) {
      .type__text {
        font-size: 1.125rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
